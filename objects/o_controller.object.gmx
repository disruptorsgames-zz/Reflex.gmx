<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
window_set_fullscreen(true);

// GUI
title = "Hello";
subtitle = "World";
run = false;
alarm[0] = 120;
box_color = c_black;//make_colour_rgb(random(128), random(255), random(128));
credits = 0;

// screen &amp; display
window_set_cursor(cr_none);
display_reset(0, true);
disp_w = display_get_width();
disp_h = display_get_height();
aspect = disp_w / disp_h;
base_w = 640;
base_h = 480;

// math
randomize();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Surface &amp; View
if (disp_w &lt; disp_h)
{
    // portrait
    width = min(base_w, disp_w);
    height = width / aspect;
}
else
{
    // landscape
    height = min(base_h, disp_h);
    width = height * aspect;
}

view_wview[0] = floor(width);
view_hview[0] = floor(height);
view_wport[0] = disp_w;
view_hport[0] = disp_h;

surface_resize(application_surface, view_wview[0], view_hview[0]);

if (instance_exists(o_blip))
{
    view_object[0] = o_blip;
    view_hborder[0] = (view_wview[0] - o_blip.sprite_width) / 2;
    view_vborder[0] = (view_hview[0] - o_blip.sprite_height) / 2;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize GUI
if (aspect &gt; 1)
{
    //landscape
    gui_w = base_h * aspect;
    gui_h = base_h;
}
else
{
    //portrait
    gui_w = base_w;
    gui_h = base_w / aspect;
}

display_set_gui_maximise(disp_w / gui_w, disp_h / gui_h, 0, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Clear Title
title = "";
subtitle = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Calculations
if (run)
{
    if (!instance_exists(o_blip) &amp;&amp; title == "")
        instance_create(16, view_hview[0] / 2, o_blip);
    
    if (!instance_exists(o_vortex))
        instance_create(x - 250, view_yview[0] + view_hview[0] / 2, o_vortex);   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Spawn
if (run)
{
    if (current_time mod 128 == 0)
        instance_create(view_xview[0] + view_wview[0] + random(360), view_yview[0] + random(view_hview[0]), o_wall);
    if (current_time mod 1337 == 0)
        instance_create(view_xview[0] + view_wview[0] + random(360), view_yview[0] + random(view_hview[0]), o_powerup);
    //if (current_time mod 64 == 0)
        //instance_create(view_xview[0] + view_wview[0] + random(360), view_yview[0] + random(view_hview[0]), o_block);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Titles
if (string_length(title) &gt; 0)
{
    var xx = view_wview[0] / 2;
    var yy = view_hview[0] / 2;
    draw_rectangle_colour(0, yy - 64, view_wview[0], yy + 64, c_black, c_black, c_black, c_black, false);
    draw_text_colour(xx - string_width(title), yy - 32, title, c_white, c_white, c_white, c_white, 1.0);
    draw_text_colour(xx - string_width(subtitle), yy - 16, subtitle, c_white, c_white, c_white, c_white, 1.0);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Display Info
var display = string(disp_w) + "x" + string(disp_h) + " " + string(disp_w / 120) + ":" + string(disp_h / 120);
draw_text(view_wview[0] - string_width(display) - 16, 16, display);
var screen = string(view_wview[0]) + "x" + string(view_hview[0]); 
draw_text(view_wview[0] - string_width(screen) - 16, 32, screen);
var key = string(mouse_button);
draw_text(view_wview[0] - string_width(key) - 16, 48, key);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Debug Boxes
draw_sprite_ext(s_none, 0, 64, 64, 1, 1, 0, box_color, 1.0);
draw_sprite_ext(s_none, 0, gui_w - 64, 64, 1, 1, 0, box_color, 1.0);
draw_sprite_ext(s_none, 0, gui_w - 64, gui_h - 64, 1, 1, 0, box_color, 1.0);
draw_sprite_ext(s_none, 0, 64, gui_h - 64, 1, 1, 0, box_color, 1.0);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Game Info
var creds = "Credits: " + string(credits);
draw_text(view_wview[0] - string_width(creds) - 16, view_hview[0] - string_height(creds) - 16, creds);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Line
if (run)
{
    x = view_xview[0] + 200;
    y = view_yview[0];
    draw_line_color(x, y, x, y + view_hview[0], c_red, c_red);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Restar
game_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// End Game
game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
